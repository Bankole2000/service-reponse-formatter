export { Rez, statuses, StatusType, IDataAccess, TFuncResult, TResponseData, TStatus, TStatusType } from './serviceResponses';
export { ServiceResponse } from './@types/ServiceResponse';
export { ServiceEvent } from './@types/ServiceEvent';
declare const BadRequest: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, ExpectationFailed: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, Forbidden: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, InternalServerError: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, MethodNotAllowed: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, NotFound: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, OK: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, ServiceUnavailable: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, TimeoutError: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, TooManyRequests: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, UnProcessableEntity: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, UnSupportedMediaType: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse, Unauthorized: (ResponseData: import("./serviceResponses").TResponseData) => import("./@types/ServiceResponse").ServiceResponse;
export { BadRequest, ExpectationFailed, Forbidden, InternalServerError, MethodNotAllowed, NotFound, OK, ServiceUnavailable, TimeoutError, TooManyRequests, UnProcessableEntity, UnSupportedMediaType, Unauthorized };
